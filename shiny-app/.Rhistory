ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 30
hippopede.magnitude = 1
n = 0.01; g = 2*pi*n
ecliptic = 0.1
ecliptic.magnitude = 10
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 3
hippopede.magnitude = 1
n = 0.01; g = 2*pi*n
ecliptic = 0.1
ecliptic.magnitude = 10
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 3
hippopede.magnitude = 10
n = 0.01; g = 2*pi*n
ecliptic = 0.1
ecliptic.magnitude = 10
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 3
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 0.1
ecliptic.magnitude = 10
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 3
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 10*2*pi
ecliptic.magnitude = 10
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 2
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 10*2*pi
ecliptic.magnitude = 10
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 2
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 10*2*pi
ecliptic.magnitude = 1
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 2
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 5*2*pi
ecliptic.magnitude = 1
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 2
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 100*2*pi
ecliptic.magnitude = 1
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 2
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 200*2*pi
ecliptic.magnitude = 1
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 2
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 100*2*pi
ecliptic.magnitude = 1
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = -1
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 100*2*pi
ecliptic.magnitude = 1
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = -2
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 100*2*pi
ecliptic.magnitude = 1
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
a = 1
b = 3
hippopede.magnitude = 5
n = 0.01; g = 2*pi*n
ecliptic = 100*2*pi
ecliptic.magnitude = 1
x.drift = 0
t = seq(0,50,0.01)
x = -hippopede.magnitude*a * sin(b*g*t) * cos(a*g*t) + cos(ecliptic*t)*ecliptic.magnitude + x.drift*t
y = hippopede.magnitude*a * sin(b*g*t) * sin(a*g*t) + sin(ecliptic*t)*ecliptic.magnitude
z = sin(45) * cos(b*g*t)
library(ggplot2)
orbit <- data.frame(x, y, z, t)
ggplot(orbit, aes(x, y, colour=t))+geom_point()+
theme_bw()+scale_color_continuous(low="yellow", high="red")
v <- read.delim('~/Downloads/vertebrate_db.txt', sep='\t')
dim(d)
dim(v)
colnames(v)
colnames(v)[ncol(v)] <- "HostSpeciesPHB"
colnames(v)
write.delim('~/Downloads/vertebrate_db.txt', sep='\t')
write.table('~/Downloads/vertebrate_db.txt', sep='\t', quote=F)
write.table('~/Downloads/vertebrate_db.txt', x=v, sep='\t', quote=F)
d <- read.delim('~/Downloads/vertebrate_db.txt', sep='\t')
dim(d)
head(v)
write.table('~/Downloads/vertebrate_db_2.txt', x=v, sep='\t', quote=F)
d <- read.delim('~/Downloads/vertebrate_db_2.txt', sep='\t')
write.table('~/Downloads/vertebrate_db_2.txt', x=v, sep='\t', quote=F, row.names=F)
d <- read.delim('~/Downloads/vertebrate_db_2.txt', sep='\t')
dim(d)
dim(v)
tail(d)
tail(v)
dim(v)
write.table(v, file='~/Downloads/test_vertebrate_db.txt', sep='\t', row.names=F, quote=F)
e <- read.delim('~/Downloads/test_vertebrate_db.txt', sep='\t')
dim(e)
head(e)
View(e)
table(d$HostSpeciesPHB %in% v$HostSpeciesPHB)
d[which(!d$HostSpeciesPHB %in% v$HostSpeciesPHB),]
View(v)
write.csv(v, file='~/Downloads/test_vertebrate_db.csv', quote=F)
a <- read.csv('~/Downloads/test_vertebrate_db.csv')
dim(a)
dim(c)
dim(v)
head(a)
head(v)
tail(v)
tail(a)
write.csv(v, file='~/Downloads/test_vertebrate_db.csv', quote=T)
a <- read.csv('~/Downloads/test_vertebrate_db.csv')
dim(a)
write.table(v, file='~/Downloads/test_vertebrate_db.txt', quote=T, row.names=F)
write.table(v, file='~/Downloads/test_vertebrate_db.txt', quote=T, row.names=F, sep='\t')
a <- read.delim('~/Downloads/test_vertebrate_db.txt', sep='\t')
dim(a)
if (packageVersion("devtools") < 1.6) {
install.packages("devtools")
}
devtools::install_github("bradleyboehmke/harrypotter")
library(harrypotter)
?harrypotter
chamber_of_secrets
grep("Prophecy", chamber_of_secrets)
class(chamber_of_secrets)
grep("prophecy", prisoner_of_azkaban)
grep("ginny", prisoner_of_azkaban)
grep("Gryffindor", prisoner_of_azkaban)
grep("Ginny*", prisoner_of_azkaban)
grep("*rophecy*", prisoner_of_azkaban)
grep("*rophecy*", philosophers_stone)
grep("*rophecy*", half_blood_prince)
grep("*rophecy*", deathly_hallows)
deathly_hallows[33]
grep("*rophecy*", deathly_hallows[33])
grep("*rophecy*", order_of_the_phoenix)
library(NLP)
library(tm)
phoenix <- Corpus(VectorSource(order_of_the_phoenix))
phoneix
phoenix
phoenix.corp <- tm_map(phoenix, PlainTextDocument)
phoenix.corp
phoenix.corp <- tm_map(phoenix.corp, removePunctuation)
phoenix.corp <- tm_map(phoenix.corp, removeNumbers)
phoenix.corp
grep("*rophecy*", phoenix.corp)
great.positions.v <- which(phoenix.corpl[[1]][]=="*rophecy*")
great.positions.v <- which(phoenix.corp[[1]][]=="*rophecy*")
great.positions.v
phoenix.corp[[1]]
phoenix.corp[[1]][]
library(ape)
?cophenetic
?cophenetic.phylo
length <- 5257260
10986*300
reads <- 10986
read.length <- 300
reads*read.length/length
reads*read.length/(length*5)
setwd('~/Dropbox/Collaborations/NeoTree/shiny-app/')
source('read-json.R')
head(df.plot)
a <- spread(df.plot)
library(tidyr)
a <- spread(df.plot)
a <- spread(data = df.plot, key = "session")
head(a)
a <- spread(df.plot, key, value)
head(a)
head(df.plot)
duplicated(df.plot)
table(duplicated(df.plot))
dim(df.plot)
df.plot[duplicated(df.plot),]
a <- spread(df.plot, key, value)
df.plot[c(6337, 6340),]
df.plot[c(6338, 6339),]
df.plot[c(5946, 5944),]
df.plot <- df.plot[-which(duplicated(df.plot)),]
a <- spread(df.plot, key, value)
head(a)
dim(a)
df.plot <- spread(df.plot, key, value)
head(df.plot)
df.plot$DateTimeAdmission
gsub(pattern = "T.*", replacement = "", df.plot$DateTimeAdmission)
df.plot$DateTimeAdmission
df.plot$Day <- gsub(pattern = "T.*", replacement = "", df.plot$DateTimeAdmission)
df.plot$Time <- gsub(pattern = ".*T", replacement = "", df.plot$DateTimeAdmission)
head(df.plot)
df.plot$Time <- gsub(pattern="+.*", replacement="",
gsub(pattern = ".*T", replacement = "", df.plot$DateTimeAdmission))
head(df.plot)
df.plot$Time <- gsub(pattern="\+.*", replacement="",
gsub(pattern = ".*T", replacement = "", df.plot$DateTimeAdmission))
df.plot$Time <- gsub(pattern=".*+", replacement="",
gsub(pattern = ".*T", replacement = "", df.plot$DateTimeAdmission))
df.plot$Time <- gsub(pattern="\\+.*", replacement="",
gsub(pattern = ".*T", replacement = "", df.plot$DateTimeAdmission))
head(df.plot)
df.plot$Day <- as.Date(gsub(pattern = "T.*", replacement = "", df.plot$DateTimeAdmission), format="yyyy-mm-dd")
head(df.plot)
df.plot$Day <- as.Date(gsub(pattern = "T.*", replacement = "", df.plot$DateTimeAdmission), format="%y-%m-%d")
head(df.plot)
?as.Date
df.plot$Day <- as.Date(gsub(pattern = "T.*", replacement = "", df.plot$DateTimeAdmission), format="%Y-%m-%d")
head(df.plot)
class(df.plot$Day)
df.plot$Day[1]
df.plot$TimeAdmission <- as.numeric(gsub(pattern="\\+.*", replacement="",
gsub(pattern = ".*T", replacement = "", df.plot$DateTimeAdmission)))
head(df.plot)
?as.Time
as.Date("13:02:23", format="%h:%m:%s")
chron("13:02:23", format="%h:%m:%s")
library(chron)
chron("13:02:23", format="%h:%m:%s")
chron("13:02:23", format="%h\:%m\:%s")
chron("13:02:23", format="%h:%m:%s")
help(strptime)
strftime("13:02:23")
strftime("13:02:23", format = "%h:%m:%s")
strftime("13:02:23", format = "%H:%m:%s")
strftime("13:02:23", format = "%H:%M:%S")
strftime("13:02:23", format = "%H:%M:%s")
strftime("13:02:23", format = "%H:%M:%S")
strftime(x = "13:02:23", format = "%H:%M:%S")
strftime(x = "13:02:23", format = ""%Y-%m-d %H:%M:%S")
strftime(x = "13:02:23", format = "%Y-%m-d %H:%M:%S")
?strptime
strftime("13:02:23")
strftime("2015-01-01 13:02:23")
class(strftime("2015-01-01 13:02:23"))
format(strftime("2015-01-01 13:02:23"))
format(strftime("2015-01-01 13:02:23"))
format(strftime("2015-01-01 13:02:23"))
format(strftime("2015-01-01 13:02:23"))
library(hms)
as.hms("13:02:23")
df.plot$TimeAdmission <- as.hms(gsub(pattern="\\+.*", replacement="",
gsub(pattern = ".*T", replacement = "", df.plot$DateTimeAdmission)))
head(df.plot)
library(ggplot2)
ggplot(df.plot, aes(TimeAdmission))+geom_hist()
ggplot(df.plot, aes(TimeAdmission))+geom_histogram()
ggplot(df.plot, aes(TimeAdmission))+geom_hist()+theme_bw()
ggplot(df.plot, aes(TimeAdmission))+geom_histogram()+theme_bw()
df.plot$DateAdmission <- as.Date(gsub(pattern = "T.*", replacement = "", df.plot$DateTimeAdmission), format="%Y-%m-%d")
head(df.plot)
weekdays(df.plot$DateAdmission)
df.plot$WeekdayAdmission <- weekdays(df.plot$DateAdmission)
df.plot$MonthAdmission <- month(df.plot$DateAdmission)
format(df.plot$DateAdmission, "%m")
format(df.plot$DateAdmission, "%w")
df.plot$DateAdmission <- as.Date(gsub(pattern = "T.*", replacement = "", df.plot$DateTimeAdmission), format="%Y-%m-%d")
df.plot$WeekdayAdmission <- weekdays(df.plot$DateAdmission)  # Actual day (monday, tuesday etc.)
df.plot$MonthAdmission <- format(df.plot$DateAdmission, "%m") # Month as number from 1-12
df.plot$WeekAdmission <- format(df.plot$DateAdmission, "%w") # Week as number from 1-52
df.plot$TimeAdmission <- as.hms(gsub(pattern="\\+.*", replacement="",
gsub(pattern = ".*T", replacement = "", df.plot$DateTimeAdmission)))
ggplot(df.plot, aes(TimeAdmission))+geom_histogram()+theme_bw()+facet_wrap(~WeekAdmission)
df.plot$WeekAdmission <- format(df.plot$DateAdmission, "%w")+1 # Week as number from 0-51, so add 1
df.plot$WeekAdmission <- format(df.plot$DateAdmission, "%w") # Week as number from 0-51
ggplot(df.plot, aes(TimeAdmission))+geom_histogram()+theme_bw()+facet_wrap(~WeekAdmission)
ggplot(df.plot, aes(TimeAdmission))+geom_histogram(colour='black')+theme_bw()+facet_wrap(~WeekAdmission)
ggplot(df.plot, aes(TimeAdmission))+geom_histogram(fill='black')+theme_bw()+facet_wrap(~WeekAdmission)
ggplot(df.plot, aes(TimeAdmission))+geom_histogram(fill='black')+theme_bw()+facet_wrap(~WeekdayAdmission)
df.plot$WeekdayAdmission <- ordered(weekdays(df.plot$DateAdmission),
levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
ggplot(df.plot, aes(TimeAdmission))+geom_histogram(fill='black')+theme_bw()+facet_wrap(~WeekdayAdmission)
source('read-json.R')
head(df.plot)
View(df.plot)
grep("SEPS", df.plot$Diagnoses)
ggplot(df.plot, aes(Diagnoses))+geom_bar()+facet_wrap(~WeekAdmission)
ggplot(df.plot, aes(Diagnoses))+geom_bar(position="stack")+facet_wrap(~WeekAdmission)
ggplot(df.plot, aes(Diagnoses))+geom_bar(position="stack")+facet_wrap(~WeekAdmission)+theme_bw()
df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses))
library(reshape2)
df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses))
library(dplyr)
df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses))
d <- df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses))
View(d)
d <- df.plot %>% group_by(WeekAdmission) %>% summarise(table(Diagnoses))
d <- df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]))
d <- df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]), total=length(Diagnoses))
require(reshape2)
sepsis.by.week <- df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]), total=length(Diagnoses))
head(sepsis.by.week)
sepsis.by.week <- data.frame(df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]), total=length(Diagnoses)))
head(sepsis.by.week)
colnames(sepsis.by.week) <- c("WeekAdmission", "SepsisDiagnoses", "TotalDiagnoses")
melt(sepsis.by.week)
sepsis.by.week <- melt(sepsis.by.week)
head(sepsis.by.week)
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge")+theme_bw()
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_bw()
unique(df.plot$Diagnoses)
unique(df.plot$Diagnoses32)
unique(df.plot$Diagnoses2)
sepsis.by.week <- data.frame(df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]), nonsepsis=length(Diagnoses[which(Diagnoses!="SEPS")])))
colnames(sepsis.by.week) <- c("WeekAdmission", "SepsisDiagnoses", "TotalDiagnoses")
colnames(sepsis.by.week) <- c("WeekAdmission", "Sepsis", "NonSepsis")
sepsis.by.week <- melt(sepsis.by.week)
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_bw()
theme_liam <- function () {
theme_bw(base_size=12) %+replace%
theme(
axis.text=element_text(colour="black")
)
}
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_liam()
sepsis.by.week <- na.omit(melt(sepsis.by.week))
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_liam()
sepsis.by.week <- data.frame(df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]), nonsepsis=length(Diagnoses[which(Diagnoses!="SEPS")])))
colnames(sepsis.by.week) <- c("WeekAdmission", "Sepsis", "NonSepsis")
sepsis.by.week <- na.omit(melt(sepsis.by.week))
head(sepsis.by.week)
sepsis.by.week <- melt(sepsis.by.week)
sepsis.by.week <- data.frame(df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]), nonsepsis=length(Diagnoses[which(Diagnoses!="SEPS")])))
colnames(sepsis.by.week) <- c("WeekAdmission", "Sepsis", "NonSepsis")
sepsis.by.week <- melt(sepsis.by.week)
head(sepsis.by.week)
sepsis.by.week <- data.frame(df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]), nonsepsis=length(Diagnoses[which(Diagnoses!="SEPS")])))
colnames(sepsis.by.week) <- c("WeekAdmission", "Sepsis", "NonSepsis")
head(sepsis.by.week)
sepsis.by.week
sepsis.by.week <- sepsis.by.week[!is.na(sepsis.by.week$WeekAdmission),]
sepsis.by.week
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_liam()
sepsis.by.week <- data.frame(df.plot %>% group_by(WeekAdmission) %>% summarise(length(Diagnoses[which(Diagnoses=="SEPS")]), nonsepsis=length(Diagnoses[which(Diagnoses!="SEPS")])))
colnames(sepsis.by.week) <- c("WeekAdmission", "Sepsis", "NonSepsis")
sepsis.by.week <- sepsis.by.week[!is.na(sepsis.by.week$WeekAdmission),]
sepsis.by.week <- melt(sepsis.by.week)
head(sepsis.by.week)
sepsis.by.week
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_liam()
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_liam()+labs(fill="Cases")
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_liam()+labs(fill="Diagnosis")
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_liam()+labs(fill="Diagnosis")+xlab("Week of admission")
ggplot(sepsis.by.week, aes(WeekAdmission, value, fill=variable))+geom_bar(position="dodge", stat="identity")+theme_liam()+labs(fill="Diagnosis")+xlab("Week of admission")+ylab("Number of patients")
shiny::runApp()
runApp()
runApp()
geom_boxplot()+
theme_bw()+
sinaplot()+
ylab("Temperature on admission")+
xlab("Week of admission")+
theme_liam()+
geom_hline(yintercept=input$threshold, linetype="dashed", size=2, colour="grey")
p <- ggplot(df.plot[which(!is.na(df.plot$WeekAdmission)),], aes(WeekAdmission, as.numeric(Temperature)))+
geom_violin()+
ylab("Temperature on admission")+
xlab("Week of admission")+
theme_liam()+
geom_hline(yintercept=input$threshold, linetype="dashed", size=2, colour="grey")
runApp()
library(ggforce)
runApp()
runApp()
View(df.plot)
colnames(df.plot)
grep("NND", df.plot)
grep("NNDs", df.plot)
grep("ABSC", df.plot)
runApp()
runApp()
